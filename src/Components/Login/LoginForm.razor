@using System.ComponentModel.DataAnnotations
@using ParkPlan.Data;
@inject UserService UserService
@inject NavigationManager Nav

<MudGrid>
    <MudItem xs="12">
        <MudCard Elevation="0">
            <MudCardContent>
                <MudTextField @bind-Value="_model.Username" For="@(() => _model.Username)" 
                              Variant="Variant.Outlined"
                              Label="Username" />
                <MudTextField @bind-Value="_model.Password" For="@(() => _model.Password)"
                              Label="Password" 
                              InputType="@PasswordInput"
                              Variant="Variant.Outlined"
                              Adornment="Adornment.End" 
                              AdornmentIcon="@PasswordInputIcon"
                              OnAdornmentClick="TogglePassword" 
                              AdornmentAriaLabel="Show Password"/>
            </MudCardContent>
            <MudCardActions Class="justify-center">
                <div>
                    <MudButton OnClick="@NavigateToProfile" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Login</MudButton>
                </div>
            </MudCardActions>
        </MudCard>
    </MudItem>
</MudGrid>

@code {
    string? Username { get; set; }
    string? Password { get; set; }
    LoginFormModel _model = new();
    bool _success;
    
    bool _isShow;
    public InputType PasswordInput = InputType.Password;
    public string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void TogglePassword()
    {
        @if (_isShow)
        {
            _isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            _isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }



    public class LoginFormModel
    {
        public string? Username { get; set; }
        public string? Password { get; set; }
    }

    private void OnValidSubmit(EditContext context)
    {
        _success = true;
        StateHasChanged();
    }

    private void NavigateToProfile()
    {
        UserService.SetUsername(_model.Username);
        Nav.NavigateTo("/profile", true);
    }
}